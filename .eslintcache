[{"C:\\React\\sap\\src\\index.js":"1","C:\\React\\sap\\src\\FioriMain.js":"2","C:\\React\\sap\\src\\CredChart.js":"3","C:\\React\\sap\\src\\DebtChart.js":"4","C:\\React\\sap\\src\\Configurator.js":"5","C:\\React\\sap\\src\\FShellBar.js":"6","C:\\React\\sap\\src\\reportWebVitals.js":"7","C:\\React\\sap\\src\\TableBar.js":"8","C:\\React\\sap\\src\\App.js":"9"},{"size":500,"mtime":1612348402227,"results":"10","hashOfConfig":"11"},{"size":2935,"mtime":1612348621959,"results":"12","hashOfConfig":"11"},{"size":9060,"mtime":1611562999847,"results":"13","hashOfConfig":"11"},{"size":9197,"mtime":1611927035830,"results":"14","hashOfConfig":"11"},{"size":10703,"mtime":1612432266296,"results":"15","hashOfConfig":"11"},{"size":2005,"mtime":1612351623862,"results":"16","hashOfConfig":"11"},{"size":362,"mtime":1611917745341,"results":"17","hashOfConfig":"11"},{"size":2301,"mtime":1607510850638,"results":"18","hashOfConfig":"11"},{"size":601,"mtime":1611918959621,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dgcgsp",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\React\\sap\\src\\index.js",[],"C:\\React\\sap\\src\\FioriMain.js",[],"C:\\React\\sap\\src\\CredChart.js",[],["41","42"],"C:\\React\\sap\\src\\DebtChart.js",[],"C:\\React\\sap\\src\\Configurator.js",["43"],"import React, { Component } from \"react\";\r\n//import Loader from \"./Loader\";\r\n//import OData from 'react-odata';\r\n//import buildQuery from 'odata-query';\r\nimport { Loader } from \"@ui5/webcomponents-react/lib/Loader\";\r\nimport { FlexBox } from \"@ui5/webcomponents-react/lib/FlexBox\";\r\nimport { RadioButton } from \"@ui5/webcomponents-react/lib/RadioButton\";\r\n//import { Label } from \"@ui5/webcomponents-react/lib/Label\";\r\nimport { FlexBoxJustifyContent } from \"@ui5/webcomponents-react/lib/FlexBoxJustifyContent\";\r\nimport { FlexBoxAlignItems } from \"@ui5/webcomponents-react/lib/FlexBoxAlignItems\";\r\nimport { FlexBoxDirection } from \"@ui5/webcomponents-react/lib/FlexBoxDirection\";\r\nimport { ValueState } from \"@ui5/webcomponents-react/lib/ValueState\";\r\nimport { CheckBox } from \"@ui5/webcomponents-react/lib/CheckBox\";\r\nimport { Badge } from \"@ui5/webcomponents-react/lib/Badge\";\r\nimport \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";\r\nimport { List } from \"@ui5/webcomponents-react/lib/List\";\r\nimport { StandardListItem } from \"@ui5/webcomponents-react/lib/StandardListItem\";\r\nimport { Card } from \"@ui5/webcomponents-react/lib/Card\";\r\n\r\n//import { Icon } from '@ui5/webcomponents-react/lib/Icon';\r\n//import { Carousel } from \"@ui5/webcomponents-react/lib/Carousel\";\r\n//\"import {useMDXComponents} from './context';\r\n//import { MDXCreateElement } from \"@ui5/webcomponents-react/lib/\"\r\n//import {MDXCreateElement} from '@mdx-js/react'\r\nvar myHeaders = new Headers();\r\nvar basket = [];\r\nvar items = [];\r\nvar sum = 0;\r\nvar sumString;\r\nvar requestOptions = {\r\n  method: \"GET\",\r\n  credentials: \"include\",\r\n  headers: myHeaders,\r\n  redirect: \"follow\",\r\n};\r\n\r\nclass Configurator extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      cMaterial: \"\",\r\n      sum: 0,\r\n      basket: [],\r\n      isLoadingMat: true,\r\n      isLoadingGroup: false,\r\n      data_conf_mat: [],\r\n      data_group: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // const query = buildQuery({...})\r\n    let sql =\r\n      \"https://sap-odata.gomselmash.by/sap/opu/odata/ZHM/C_CONF_MAT_CDS/xZHMxc_conf_mat?$format=json\";\r\n\r\n    await fetch(sql, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        this.setState({\r\n          data_conf_mat: result.d.results,\r\n          isLoadingMat: false,\r\n        });\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n  onCmatSelect = async (item) => {\r\n    basket = [];\r\n    this.setState({\r\n      basket: basket,\r\n      cMaterial: item.matnr_ext,\r\n    });\r\n    console.log(item);\r\n    let conf_mat_uuid = item.conf_mat_uuid;\r\n    let sql =\r\n      \"https://sap-odata.gomselmash.by/sap/opu/odata/ZHM/C_CONF_MAT_CDS/xZHMxc_conf_mat(guid'\" +\r\n      conf_mat_uuid +\r\n      \"')?$format=json&$expand=to_groupdata2/to_itemtdata\";\r\n    console.log(sql);\r\n    this.setState({\r\n      data_group: [],\r\n      isLoadingGroup: true,\r\n    });\r\n    await fetch(sql, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        this.setState({\r\n          data_group: result.d.to_groupdata2.results,\r\n          isLoadingGroup: false,\r\n        });\r\n        items = [];\r\n        this.state.data_group.map((item) =>\r\n          item.to_itemtdata.results.map((material, i) => items.push(material))\r\n        );\r\n        console.log(items);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  onItemRadioSelect = (e) => {\r\n    basket = this.state.basket;\r\n    if (e.target.selected) {\r\n      basket.push(e.target.value);\r\n      console.log(basket);\r\n      items.forEach((item) => {\r\n        if (\r\n          e.target.name === item.mat_group_uuid &&\r\n          e.target.value !== item.matnr_ext\r\n        ) {\r\n          let idx = basket.indexOf(item.matnr_ext);\r\n          console.log(idx);\r\n          if (idx > -1) {\r\n            console.log(\"Delete\", item.matnr_ext);\r\n            console.log(basket.splice(basket.indexOf(item.matnr_ext), 1));\r\n          }\r\n        }\r\n      });\r\n    }\r\n    this.setState({\r\n      basket: basket,\r\n    });\r\n  };\r\n  onItemCheckBoxChange = (e) => {\r\n    console.log(e.target.checked, e.target.name);\r\n    basket = this.state.basket;\r\n\r\n    if (e.target.checked) {\r\n      basket.push(e.target.name);\r\n    } else {\r\n      basket.splice(basket.indexOf(e.target.name), 1);\r\n    }\r\n    this.setState({\r\n      basket: basket,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.basket);\r\n    sum = 0;\r\n    this.state.basket.forEach(\r\n      (item) =>\r\n        (sum =\r\n          sum +\r\n          parseFloat(\r\n            items[\r\n              items\r\n                .map(function (e) {\r\n                  return e.matnr_ext;\r\n                })\r\n                .indexOf(item)\r\n            ].price\r\n          ))\r\n    );\r\n    sumString = \"Стоимость комплекта: \" + sum + \" USD\";\r\n    let confMat;\r\n    if (this.state.isLoadingMat) {\r\n      confMat = <Loader />;\r\n    } else {\r\n      confMat = (\r\n        <FlexBox\r\n          style={{\r\n            width: \"100%\",\r\n          }}\r\n          justifyContent={FlexBoxJustifyContent.SpaceBetween}\r\n          direction={FlexBoxDirection.Column}\r\n        >\r\n          <FlexBox alignItems={FlexBoxAlignItems.Center}>\r\n            {this.state.data_conf_mat.map((item) => (\r\n              <RadioButton\r\n                name=\"ConfMat\"\r\n                text={item.matnr_ext}\r\n                valueState={ValueState.Error}\r\n                onClick={this.onCmatSelect.bind(null, item)}\r\n              />\r\n            ))}\r\n          </FlexBox>\r\n\r\n          <Badge\r\n            className=\"\"\r\n            colorScheme={2}\r\n            //icon={<Icon name=\"employee\" />}\r\n            slot=\"\"\r\n            style={{}}\r\n            tooltip={this.state.cMaterial}\r\n          >\r\n            {this.state.cMaterial}\r\n          </Badge>\r\n          <p></p>\r\n        </FlexBox>\r\n      );\r\n    }\r\n\r\n    let confGroup;\r\n    if (this.state.isLoadingGroup) {\r\n      confGroup = <Loader />;\r\n    } else {\r\n      confGroup = (\r\n        <FlexBox\r\n          style={{ width: \"95%\", border: \"1px\" }}\r\n          justifyContent={FlexBoxJustifyContent.SpaceBetween}\r\n          direction={FlexBoxDirection.Row}\r\n        >\r\n          <FlexBox\r\n            alignItems={FlexBoxAlignItems.Start}\r\n            direction={FlexBoxDirection.Column}\r\n            justifyContent={FlexBoxJustifyContent.SpaceBetween}\r\n          >\r\n            {this.state.data_group.map((item) => (\r\n              <div>\r\n                <FlexBox\r\n                  alignItems={FlexBoxAlignItems.Center}\r\n                  direction={FlexBoxDirection.Column}\r\n                  justifyContent={FlexBoxJustifyContent.SpaceBetween}\r\n                >\r\n                  {\" \"}\r\n                  <Badge\r\n                    className=\"\"\r\n                    colorScheme={1}\r\n                    //icon={<Icon name=\"employee\" />}\r\n                    slot=\"\"\r\n                    style={{}}\r\n                    tooltip={item.group_description}\r\n                  >\r\n                    {item.group_name}\r\n                  </Badge>\r\n                </FlexBox>\r\n                {item.to_itemtdata.results.map((material, i) =>\r\n                  item.type_of_group === \"ONE\" ? (\r\n                    <FlexBox\r\n                      alignItems={FlexBoxAlignItems.Start}\r\n                      direction={FlexBoxDirection.Column}\r\n                      justifyContent={FlexBoxJustifyContent.Start}\r\n                    >\r\n                      <RadioButton\r\n                        name={item.mat_group_uuid}\r\n                        text={\r\n                          material.maktx +\r\n                          \": \" +\r\n                          material.matnr_ext +\r\n                          \" Цена: \" +\r\n                          material.price\r\n                        }\r\n                        valueState={ValueState.Warning}\r\n                        value={material.matnr_ext}\r\n                        //onClick={this.onItemSelect.bind(null, material)}\r\n                        onSelect={this.onItemRadioSelect}\r\n                      />\r\n                    </FlexBox>\r\n                  ) : (\r\n                    <FlexBox\r\n                      alignItems={FlexBoxAlignItems.Start}\r\n                      direction={FlexBoxDirection.Column}\r\n                      justifyContent={FlexBoxJustifyContent.Start}\r\n                    >\r\n                      <CheckBox\r\n                        name={material.matnr_ext}\r\n                        text={\r\n                          material.maktx +\r\n                          \": \" +\r\n                          material.matnr_ext +\r\n                          \" Цена: \" +\r\n                          material.price\r\n                        }\r\n                        value-state={ValueState.Warning}\r\n                        onChange={this.onItemCheckBoxChange}\r\n                      />\r\n                    </FlexBox>\r\n                  )\r\n                )}\r\n              </div>\r\n            ))}\r\n          </FlexBox>\r\n          <FlexBox\r\n            alignItems={FlexBoxAlignItems.Start}\r\n            direction={FlexBoxDirection.Column}\r\n            justifyContent={FlexBoxJustifyContent.SpaceBetween}\r\n          >\r\n            <Card\r\n              //avatar={<Icon name=\"person-placeholder\" />}\r\n              className=\"\"\r\n              heading={sumString}\r\n              onHeaderClick={function noRefCheck() {}}\r\n              slot=\"\"\r\n              ///status=\"3 of 5\"\r\n              style={\r\n                {\r\n                  // width: \"300px\",\r\n                }\r\n              }\r\n              subheading=\"Состав:\"\r\n              tooltip=\"\"\r\n            >\r\n              {this.state.basket.map((item) => (\r\n                <StandardListItem\r\n                  info={\r\n                    items[\r\n                      items\r\n                        .map(function (e) {\r\n                          return e.matnr_ext;\r\n                        })\r\n                        .indexOf(item)\r\n                    ].price\r\n                  }\r\n                  description={\r\n                    items[\r\n                      items\r\n                        .map(function (e) {\r\n                          return e.matnr_ext;\r\n                        })\r\n                        .indexOf(item)\r\n                    ].maktx\r\n                  }\r\n                >\r\n                  {item}\r\n                </StandardListItem>\r\n              ))}\r\n            </Card>\r\n          </FlexBox>\r\n        </FlexBox>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        {confMat}\r\n        {confGroup}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Configurator;\r\n","C:\\React\\sap\\src\\FShellBar.js",[],"C:\\React\\sap\\src\\reportWebVitals.js",[],["44","45"],"C:\\React\\sap\\src\\TableBar.js",[],"C:\\React\\sap\\src\\App.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":16,"column":10,"nodeType":"52","messageId":"53","endLine":16,"endColumn":14},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'List' is defined but never used.","Identifier","unusedVar",["56"],["57"],"no-global-assign","no-unsafe-negation"]